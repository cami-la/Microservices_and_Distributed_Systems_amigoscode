version: '3.1'

services:
  db-customer:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_DB: ${POSTGRES_DB:-customer}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5431:5432
    networks:
      - postgres
  db-fraud:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_DB: ${POSTGRES_DB:-fraud}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres
  db-notification:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_DB: ${POSTGRES_DB:-notification}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5433:5432
    networks:
      - postgres
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - /var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - spring
    restart: always
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - spring
    restart: always
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
  eureka-server:
    image: camila94/eureka-server:latest
    container_name: eureka-server
    ports:
      - 8761:8761
    networks:
      - spring
#    depends_on:
#      - prometheus
  apigw:
    image: camila94/apigw:latest
    container_name: apigw
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
#      - prometheus
      - eureka-server

networks:
  postgres:
  spring:
    driver: bridge

volumes:
  postgres:
  prometheus_data: {}
  grafana_data: {}

# docker compose up -d
# docker inspect <COINTAINER ID> | grep IPAddress