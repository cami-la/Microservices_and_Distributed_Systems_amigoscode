version: '3.1'

services:
  db-customer:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_DB: ${POSTGRES_DB:-customer}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres
  db-fraud:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_DB: ${POSTGRES_DB:-fraud}
      PGDATA: /data/postgres
    volumes:
      - /data/postgres
    ports:
      - 5432:5432
    networks:
      - postgres
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - /var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  postgres:

# docker compose up -d
# docker inspect <COINTAINER ID> | grep IPAddress